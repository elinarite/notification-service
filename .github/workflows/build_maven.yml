# This workflow will build a Java project with Maven,
# and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

#name: Java CI with Maven
#on: push
#
#jobs:
#  build:
#    runs-on: macos-13
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: maven
#      - name: use Telegram Token
#        run: echo "Using token ${{ secrets.BOT_TOKEN }}"
#        env:
#          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#      - name: build with Maven
#        run: mvn -B package --file pom.xml
#  test:
#    needs: [build]
#    runs-on: macos-13
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#      - name: use Telegram Token
#        run: echo "Using token ${{ secrets.BOT_TOKEN }}"
#        env:
#          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
#      - name: Test
#        run: mvn test
name: Java CI with Maven
on: push

jobs:
  build_and_test:
    runs-on: macos-13
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Set Telegram Token
        run: echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> $GITHUB_ENV

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Test with Maven
        run: mvn test
