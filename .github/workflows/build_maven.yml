# This workflow will build a Java project with Maven,
# and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

name: Java CI with Maven
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build without tests
        run: mvn clean install -DskipTests
      - name: Display Docker version
        run: docker --version
#      - name: Set BOT_NAME Environment Variable
#        run: echo "BOT_NAME=${{ secrets.BOT_NAME }}" >> $GITHUB_ENV
#      - name: Set BOT_TOKEN Environment Variable
#        run: echo "BOT_TOKEN=${{ secrets.BOT_TOKEN }}" >> $GITHUB_ENV
#      - name: Set BOT_OWNER Environment Variable
#        run: echo "BOT_OWNER=${{ secrets.BOT_OWNER }}" >> $GITHUB_ENV
      - name: Run tests
        run: mvn test
#          -DargLine='-DBOT_NAME=${{ env.BOT_NAME }}' -DargLine='-DBOT_TOKEN=${{ env.BOT_TOKEN }}' -DargLine='-DBOT_OWNER=${{ env.BOT_OWNER }}'